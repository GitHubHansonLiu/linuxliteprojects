#!/usr/bin/env python
#  
#
#  Copyright 2013 Johnathan "ShaggyTwoDope" Jenkins <twodopeshaggy@gmail.com>
#  
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#  
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#  
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
#  MA 02110-1301, USA.
#  
#  
#  todo: 
#  refresh menu options without re-opening?
#  important notes: file path for count not absolute yet.
#  possibly set icon flashing on update count >0
#  need to set proper icon, maybe changes when click?

import pygtk
pygtk.require('2.0')
import gtk, subprocess, os

class LiteUpdateTray():
	
    def __init__(self):
        self.tray = gtk.StatusIcon()
        self.tray.set_from_file('/usr/share/pixmaps/updates_ll.png')
        self.tray.connect('popup-menu', self.on_right_click)
        self.tray.connect('activate', self.on_left_click)
        update3 = os.popen('cat /home/shaggy/Downloads/systray_concept/updates.txt').read()
        self.tray.set_tooltip('Linux Lite Updates Available: ' + update3)


    def flasher(self):
        self.tray.set_from_file('/usr/share/pixmaps/updates_ll.png')
        self.tray.set_flashing(True)

    def on_right_click(self, icon, event_button, event_time):
        self.make_menu(event_button, event_time)
        #if self.tray.set_flashing() == True:
        #self.tray.set_flashing(False)
        self.tray.set_from_file('/usr/share/pixmaps/updates_ll.png')
        
    #lxterminal set, will be set to open liteupdater  
    def on_left_click(self, event):
        os.system('lxterminal -e alsamixer')

    def make_menu(self, event_button, event_time):
        menu = gtk.Menu()

        # show about dialog
        about = gtk.MenuItem('About')
        about.show()
        menu.append(about)
        about.connect('activate', self.show_about_dialog)

        # add run item for manual updates
        run = gtk.MenuItem('Run Updates')
        run.show()
        menu.append(run)
        run.connect('activate', self.show_update)

        #open log, valtam need ideas on what to log
        chklog = gtk.MenuItem('View Log')
        chklog.show()
        menu.append(chklog)
        chklog.connect('activate', self.show_log)
        
        
        #here we check for updates
        update2 = os.popen('cat /home/shaggy/Downloads/systray_concept/updates.txt').read()
        updateavail = gtk.MenuItem('Updates Avilable:' + update2)
        updateavail.show()
        menu.append(updateavail)
        #ugly hack to update number of updates on right click
        self.tray.set_tooltip('Linux Lite Updates Available: ' + update2)
        updateavail.connect('activate', self.show_log)


        # add quit item
        quit = gtk.MenuItem('Quit')
        quit.show()
        menu.append(quit)
        quit.connect('activate', gtk.main_quit)

        menu.popup(None, None, gtk.status_icon_position_menu,
                event_button, event_time, self.tray)

    def  show_about_dialog(self, widget):
        about_dialog = gtk.AboutDialog()
        about_dialog.set_destroy_with_parent (True)
        about_dialog.set_website('http://linuxliteos.com')
        about_dialog.set_copyright('Copyright 2014')
        about_dialog.set_icon_name ('Lite Updater')
        about_dialog.set_name('Lite Updater')
        about_dialog.set_version('0.1')
        about_dialog.set_comments((u'Update Tool for Liunx Lite'))
        about_dialog.set_authors([u'Johnathan "ShaggyTwoDope" Jenkins <twodopeshaggy@gmail.com>',('Valtam ''<valtam@hush.com>')])
        about_dialog.run()
        about_dialog.destroy()
    #need to set unique path for log
    def show_log(self, widget):
        subprocess.Popen('/usr/bin/leafpad /linuxlite/updater.log', shell=True)

    #we open the amazing updater
    def show_update(self, widget):
        subprocess.Popen('liteupdater', shell=True)

# lets actually open something
if __name__ == '__main__':
    LiteUpdateTray()
    gtk.main()
